(()=>{"use strict";const n=new class{constructor(){this.isAuthenticated=!1,this.profile=null,this.token=null,this.onAuthChange=null}loginWithGoogle(n){this.isAuthenticated=!0,this.token=n.getAuthResponse().id_token,this.profile=n.getBasicProfile(),this._notifyAuthChange()}logout(){this.isAuthenticated=!1,this.profile=null,this.token=null,"function"==typeof this.onAuthChange&&this.onAuthChange()}_notifyAuthChange(){this.onAuthChange&&this.onAuthChange()}fetchProfileData(){return{name:this.profile?this.profile.getName():"",email:this.profile?this.profile.getEmail():""}}};function e(e){n.loginWithGoogle(e.getAuthResponse().id_token),console.log("Logged in as:",n.fetchProfileData().name),page.redirect("/finance-tracker-frontend/profile")}function t(n){console.log(n),document.getElementById("login-error").textContent="Failed to login with Google",page.redirect("/finance-tracker-frontend/login")}const a=JSON.parse('{"p":{"current_balance":10000,"total_expense":5000,"total_income":15000,"balance_history":[{"date":"2024-01-15T00:00:00+00:00","balance":7000},{"date":"2024-01-16T00:00:00+00:00","balance":8000}],"categories":[{"percentage":30.5,"name":"food"},{"percentage":16,"name":"transport"}],"statements":[{"name":"mcdonald","category":"food","date":"2020-12-09T16:09:53+00:00","currency":"IDR","amount":300,"type":"expense"}]}}'),o=JSON.parse('{"p":[{"name":"mcdonald","category":"food","date":"2020-12-09T16:09:53+00:00","currency":"IDR","amount":300,"type":"expense"},{"name":"mcdonald","category":"food","date":"2020-12-09T16:09:53+00:00","currency":"IDR","amount":300,"type":"expense"}]}'),i=JSON.parse('{"p":{"L":[{"key":"food"},{"key":"transport"}]}}'),s=!1;function c(){if(s)return Promise.resolve(i.p.L);if(!n.isAuthenticated)throw new Error("User is not authenticated.");return axios.get("https://finance-tracker-backend-zbxuhg7gpq-as.a.run.app/api/categories",{headers:{Authorization:`Bearer ${n.token}`}}).then((n=>n.data.data)).catch((n=>(console.error("Failed to fetch categories",n),[])))}const r=new class{constructor(){this.modal=document.getElementById("transaction-modal"),this.form=document.getElementById("transaction-form"),this.closeButton=document.querySelector(".close-button"),this.open=this.open.bind(this),this.close=this.close.bind(this),this.submit=this.submit.bind(this),this.populateCategories=this.populateCategories.bind(this),this.closeButton.addEventListener("click",this.close),this.form.addEventListener("submit",this.submit),this.populateCategories()}open(){this.modal&&(this.modal.style.display="block")}close(){this.modal&&(this.modal.style.display="none")}submit(n){n.preventDefault();const e=new FormData(this.form);console.log("Transaction data submitted:",Object.fromEntries(e.entries())),this.close()}populateCategories(){c().then((n=>{const e=this.form.elements.category;n.forEach((n=>{const t=document.createElement("option");t.value=n.id,t.textContent=n.name,e.appendChild(t)}))}))}};function l(){const e=document.getElementById("nav");e&&(n.isAuthenticated?(e.innerHTML='\n<nav id="nav" class="vertical-navbar">\n    \x3c!-- Each nav item has an icon and text --\x3e\n    <a href="/" class="nav-item">\n      <img src="../icons/home.png" alt="Home" class="nav-icon"/>\n      <span>Home</span>\n    </a>\n\n    <a href="/profile" class="nav-item">\n      <img src="../icons/user.png" alt="Profile" class="nav-icon"/>\n      <span>Profile</span>\n    </a>\n\n    <a href="/transactions" class="nav-item">\n      <img src="../icons/file.png" alt="Transactions" class="nav-icon"/>\n      <span>Transactions</span>\n    </a>\n\n    <a href="#" onclick="onLogout(); return false;">Logout</a>\n\n                <button id="add-transaction-btn" class="nav-item">+</button>\n\n\n    \x3c!-- Other nav items... --\x3e\n  </nav>\n            <a href="/">Home</a>\n            <a href="/categories">Categories</a>\n            <a href="/transactions">Transactions</a>\n            <a href="/profile">Profile</a>\n            <a href="#" onclick="onLogout(); return false;">Logout</a>\n            <button id="add-transaction-btn">+</button>\n\n        ',document.getElementById("add-transaction-btn").addEventListener("click",r.open),n.isAuthenticated&&document.getElementById("logout-link").addEventListener("click",(e=>{e.preventDefault(),n.logout(),l(),page.redirect("/login")}))):e.innerHTML='\n<a href="/" class="nav-item">\n      <img src="../icons/home.png" alt="Home" class="nav-icon"/>\n      <span>Home</span>\n    </a>\n    <a href="/login" class="nav-item">\n      <img src="../icons/door.png" alt="Door" class="nav-icon"/>\n      <span>Login</span>\n    </a>\n        ')}function d(){n.isAuthenticated?(document.getElementById("app").innerHTML='\n    <div id="dashboard" class="dashboard">\n      <div class="dashboard-item">\n        <span>Current Balance</span>\n        <div class="amount-box">$<span id="current-balance">Loading...</span></div>\n      </div>\n      <div class="dashboard-item">\n        <span>Total Expense</span>\n        <div class="amount-box">$<span id="total-expense">Loading...</span></div>\n      </div>\n      <div class="dashboard-item">\n        <span>Total Income</span>\n        <div class="amount-box">$<span id="total-income">Loading...</span></div>\n      </div>\n      <div class="dashboard-item full-width">\n        <span>Balance History</span>\n        <div id="balance-history" class="chart"></div>\n      </div>\n      <div class="dashboard-item full-width">\n        <span>Categories</span>\n        <div id="categories-chart" class="chart"></div>\n      </div>\n      <div class="dashboard-item full-width">\n        <span>Statements</span>\n        <div id="last-transactions">Loading...</div>\n      </div>\n    </div>\n\n    \x3c!-- Input Transaction Modal --\x3e\n  <div id="transaction-modal" class="modal">\n    <div class="modal-content">\n      <span class="close-button" onclick="closeModal()">&times;</span>\n      <h2>Input Transaction</h2>\n      <form id="transaction-form">\n        <label for="transaction-name">Transaction Name</label>\n        <input type="text" id="transaction-name" name="transaction-name" required>\n\n        <label for="category">Category</label>\n        <select id="category" name="category">\n          \x3c!-- Categories options will be populated dynamically --\x3e\n        </select>\n\n        <label for="transaction-date">Date of Transaction</label>\n        <input type="date" id="transaction-date" name="transaction-date" required>\n\n        <label for="amount">Amount</label>\n        <input type="number" id="amount" name="amount" step="0.01" required>\n\n        <label for="type">Type</label>\n        <select id="type" name="type">\n          <option value="Debit">Debit</option>\n          <option value="Credit">Credit</option>\n        </select>\n\n        <button type="submit">Submit</button>\n      </form>\n    </div>\n  </div>\n  ',function(){if(s)return Promise.resolve(a.p);if(!n.isAuthenticated)throw new Error("User is not authenticated.");axios.get("https://finance-tracker-backend-zbxuhg7gpq-as.a.run.app/api/dashboard",{headers:{Authorization:`Bearer ${n.token}`}}).then((n=>{const e=n.data.data;document.getElementById("current-balance").textContent=e.balance.toFixed(2),document.getElementById("total-expense").textContent=e.total_expense.toFixed(2),document.getElementById("total-income").textContent=e.total_income.toFixed(2)})).catch((n=>console.error("Failed to fetch current balance",n)))}()):document.getElementById("app").innerHTML="<h1>Home Page</h1><p>Welcome to our finance tracker.</p>"}function p(){const n=document.getElementById("app");n.innerHTML="<h1>Categories</h1><div>Loading categories...</div>",c().then((e=>{const t=e.map((n=>`<li>${n.name}</li>`)).join("");n.innerHTML=`<h1>Categories</h1><ul>${t}</ul>`}))}function h(){document.getElementById("app").innerHTML='\n    <div class="transactions-page">\n      <h1 class="page-title">Statement</h1>\n      <div class="transaction-filters">\n        <input type="search" placeholder="Search" class="transaction-search" />\n        <select class="time-frame-select">\n          <option value="1">1 Month</option>\n          <option value="3">3 Months</option>\n          <option value="6">6 Months</option>\n          <option value="12">1 Year</option>\n        </select>\n      </div>\n      <div id="transactions-list" class="transactions-list">\n        \x3c!-- Transactions will be dynamically inserted here --\x3e\n      </div>\n    </div>\n  ',function(){if(s)return Promise.resolve(o.p);axios.get("https://finance-tracker-backend-zbxuhg7gpq-as.a.run.app/api/transactions",{headers:{Authorization:`Bearer ${n.token}`}}).then((n=>{const e=n.data.data;document.getElementById("transactions-list").innerHTML=e.map((n=>`\n        <div class="transaction-item">\n          <span class="transaction-description">${n.description}</span>\n          <span class="transaction-date">${new Date(n.date).toLocaleDateString()}</span>\n          <span class="transaction-category">${n.category}</span>\n          <span class="transaction-amount">$${n.amount.toFixed(2)}</span>\n        </div>\n      `)).join("")})).catch((n=>{console.error("Failed to fetch transactions",n)}))}()}function u(){document.getElementById("app").innerHTML='\n        <h1>Login</h1>\n        <div id="login-button"></div> \x3c!-- Google Sign-In button --\x3e\n        <div id="login-error"></div>\n    ',gapi.signin2.render("login-button",{scope:"profile email",width:240,height:50,longtitle:!0,theme:"dark",onsuccess:e,onfailure:t})}function m(){if(!n.isAuthenticated)return void page.redirect("/finance-tracker-frontend/login");const e=n.fetchProfileData();document.getElementById("app").innerHTML=`\n    <div class="profile-container">\n      <h2 class="profile-title">Profile</h2>\n      <div class="profile-info">\n        <img src="${e.getImageUrl()}" alt="Profile Image" class="profile-image">\n        <p class="profile-name">${e.getName()}</p>\n        <p class="profile-email">${e.getEmail()}</p>\n      </div>\n      <div class="balance-info">\n        <h3>Balance</h3>\n        <p class="balance-amount">$<span id="profile-balance">220</span></p>\n      </div>\n    </div>\n  `}function g(e){const t=new URLSearchParams(window.location.search).get("code");t?async function(e){try{const t=await axios.post("https://salismt.github.io/finance-tracker-frontend/api/auth/google/callback",{code:e});n.loginWithGoogle(t.data.token),page.redirect("/finance-tracker-frontend/profile")}catch(n){console.error("Error processing Google login:",n),page.redirect("/finance-tracker-frontend/login")}}(t):(console.error("Google callback did not include an authorization code"),page.redirect("/finance-tracker-frontend/login"))}document.addEventListener("DOMContentLoaded",(function(){var e=document.createElement("base");e.href="localhost"===window.location.hostname?"/":"/finance-tracker-frontend/",document.head.prepend(e),l(),n.onAuthChange=l,page("/",d),page("/categories",p),page("/transactions",h),page("/login",u),page("/auth/google/callback",g),page("/profile",m),page()}))})();